name: Rebuild Bundles on Milkdown Crepe Update

on:
  schedule:
    - cron: '0 8 * * *' # Runs daily at 8:00 AM UTC
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  rebuild:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: Check for @milkdown/crepe updates
        id: check_updates
        run: |
          if ncu --target latest "@milkdown/crepe" | grep -q "All dependencies match the latest package versions"; then
            echo "No new version found."
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "New version of @milkdown/crepe found. Proceeding with update."
            echo "changes=true" >> $GITHUB_ENV
            ncu -u --target latest "@milkdown/crepe"
          fi

      - name: Install dependencies
        if: env.changes == 'true'
        run: npm install

      - name: Run build script
        if: env.changes == 'true'
        run: npm run build

      - name: Get new version from package.json
        if: env.changes == 'true'
        id: get_version
        run: |
          echo "new_version=$(jq -r .dependencies[\"@milkdown/crepe\"] package.json | tr -d '^')" >> $GITHUB_ENV

      - name: Update package.json version
        if: env.changes == 'true'
        run: |
          npm version ${{ env.new_version }} --no-git-tag-version --allow-same-version

      - name: Organize dist files
        if: env.changes == 'true'
        run: |
          # Create versioned directory
          mkdir -p dist/${{ env.new_version }}
          BUNDLE_NAME="milkdown-crepe-bundle"
          SOURCE_BUNDLE_PATH="dist/$BUNDLE_NAME.umd.js"
          VERSIONED_DIR="dist/${{ env.new_version }}"
          VERSIONED_BUNDLE_JS="$VERSIONED_DIR/$BUNDLE_NAME-${{ env.new_version }}.js"
          VERSIONED_BUNDLE_MIN_JS="$VERSIONED_DIR/$BUNDLE_NAME-${{ env.new_version }}.min.js"
          LATEST_DIR="dist/latest"
          LATEST_BUNDLE_JS="$LATEST_DIR/$BUNDLE_NAME.js"
          LATEST_BUNDLE_MIN_JS="$LATEST_DIR/$BUNDLE_NAME.min.js"

          # Create versioned directory
          mkdir -p $VERSIONED_DIR

          # Copy bundle to versioned directory
          cp $SOURCE_BUNDLE_PATH $VERSIONED_BUNDLE_JS

          # Create minified version and save to versioned directory
          npx terser $SOURCE_BUNDLE_PATH -o $VERSIONED_BUNDLE_MIN_JS --compress --mangle

          # Create a 'latest' directory for easy access
          rm -rf $LATEST_DIR
          mkdir -p $LATEST_DIR

          # Copy versioned files to latest directory
          cp $VERSIONED_BUNDLE_MIN_JS $LATEST_BUNDLE_MIN_JS
          cp $VERSIONED_BUNDLE_JS $LATEST_BUNDLE_JS

      - name: Commit and push changes
        if: env.changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "build: update @milkdown/crepe to v${{ env.new_version }} and rebuild"
          git push

      - name: Create and push version tag
        if: env.changes == 'true'
        run: |
          git tag v${{ env.new_version }}
          git push origin v${{ env.new_version }}

      - name: Update latest tag
        if: env.changes == 'true'
        run: |
          git tag -f latest
          git push -f origin latest
